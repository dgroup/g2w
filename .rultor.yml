architect:
  - dgroup
assets:
  .pypirc: dgroup/home#.pypirc
#install: |
#  export GEM_HOME=~/.ruby
#  export GEM_PATH=$GEM_HOME:$GEM_PATH
docker:
  image: python:3.8.5
release:
  script: |-
    export WS_INT_TESTS_DISABLED=true
    export PATH="/home/r/.local/bin:$PATH"
    set -e
    [[ "${tag}" =~ ^[0-9]+\.[0-9]+\.[0-9]+$ ]] || exit -1
    sed -i "s/0\.0\.0/${tag}/g" g2w/version.py
    sed -i "s/0\.0\.0/${tag}/g" .github/workflows/master.yml
    make virtualenv install test
    git add g2w/version.py setup.py .github/workflows/master.yml
    git commit -m "version set to ${tag}"
    python -m pip install --upgrade pip
    pip install setuptools wheel twine
    python setup.py sdist bdist_wheel
    twine upload --config-file=../.pypirc dist/*

# @todo #/DEV Invoke from rultor the docker build&push process through the Github actions

#    curl -s -X POST --url "https://circleci.com/api/v2/project/gh/dgroup/lazylead/envvar" -H @../circleci.header -H "accept: application/json" -H "content-type: application/json" -d "{ \"name\": \"DOCKER_RELEASE_TAGS\", \"value\": \"${tag}\" }" -o /dev/null
#    curl -s -X POST --url https://circleci.com/api/v2/project/gh/dgroup/lazylead/pipeline -H @../circleci.header -H 'accept: application/json' -H 'content-type: application/json' -H 'x-attribution-login: dgroup' -o /dev/null
merge:
  script: |-
    export PATH="/home/r/.local/bin:$PATH"
    make virtualenv install test
